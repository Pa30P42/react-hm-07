{"version":3,"sources":["contactsForm/Form.module.css","redux/actions.js","alert/Alert.module.css","App.module.css","filter/Filter.module.css","contacts/Contact.module.css","contacts/ContactItem.module.css","redux/contactsOperations.js","redux/contactsSelectors.js","contactsForm/Form.js","contacts/ContactItem.js","contacts/Contacts.js","filter/Filter.js","alert/Alert.js","App.js","redux/contactsReducer.js","redux/store.js","index.js"],"names":["module","exports","ADDCONTACT","DELETECONTACT","FILTERVALUE","GETFILTERVALUE","ALERTHANDLER","addContactRequest","createAction","addContactSuccess","addContactError","fetchContactRequest","fetchContactSuccess","fetchContactError","removeContactRequest","removeContactSuccess","removeContactError","editContactRequest","editContactSuccess","editContactError","onDeleteContact","filterValue","e","payload","filter","target","value","switchAlert","switchEdit","actions","require","default","contact","dispatch","axios","post","then","response","data","catch","error","get","id","delete","name","number","patch","getContacts","state","contacts","items","getFilter","getEdit","edit","getState","getAlert","alert","getLoading","loading","getFilteredContacts","createSelector","toLowerCase","includes","Form","handleChange","setState","handeleSubmit","preventDefault","contactItem","props","map","find","item","onAddContact","this","onSubmit","className","styles","formWrapper","inputTitle","formInput","type","onChange","btn","Component","connect","contactsSelectors","contactActions","contactsOperations","ownProps","isEdit","deleteContact","editContact","useDispatch","useState","setIsEdit","setName","setNumber","hideIsEdit","onClick","Contacts","TransitionGroup","CSSTransition","key","timeout","classNames","unmountOnExit","mapDispatchToProps","getFilterValue","findContactTitle","Alert","alertSwitch","alertWrapper","App","fetchContacts","isLoading","titleWrapper","in","appear","phonebookTitle","stylesAlert","addContact","removeTast","action","createReducer","combineReducers","defaultMiddleware","getDefaultMiddleware","store","configureStore","reducer","contactsReducer","middleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eca6b751.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"Form_formWrapper__32Q0Y\",\"formInput\":\"Form_formInput__2IyS7\",\"inputTitle\":\"Form_inputTitle__3CHV1\",\"btn\":\"Form_btn__2uvQp\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n/* TYPES */\r\nexport const ADDCONTACT = \"contact/ADD\";\r\nexport const DELETECONTACT = \"contact/DEL\";\r\nexport const FILTERVALUE = \"contact/FV\";\r\nexport const GETFILTERVALUE = \"contact/GETFV\";\r\nexport const ALERTHANDLER = \"contact/ALERT\";\r\n\r\n/* ACTIONS */\r\n\r\nconst addContactRequest = createAction(\"contact/ADDTASKREQUEST\");\r\nconst addContactSuccess = createAction(\"contact/ADDTASKSUCCESS\");\r\nconst addContactError = createAction(\"contact/ADDTASKERROR\");\r\n\r\nconst fetchContactRequest = createAction(\"contact/fetchTASKREQUEST\");\r\nconst fetchContactSuccess = createAction(\"contact/fetchTASKSUCCESS\");\r\nconst fetchContactError = createAction(\"contact/fetchTASKERROR\");\r\n\r\nconst removeContactRequest = createAction(\"contact/removeASKREQUEST\");\r\nconst removeContactSuccess = createAction(\"contact/removeTASKSUCCESS\");\r\nconst removeContactError = createAction(\"contact/removeTASKERROR\");\r\n\r\nconst editContactRequest = createAction(\"contact/editASKREQUEST\");\r\nconst editContactSuccess = createAction(\"contact/editTASKSUCCESS\");\r\nconst editContactError = createAction(\"contact/editTASKERROR\");\r\n\r\n// const onAddContact = createAction(\"contact/ADD\");\r\nconst onDeleteContact = createAction(\"contact/DEL\");\r\nconst filterValue = createAction(\"contact/FV\", (e) => ({\r\n  payload: {\r\n    filter: e.target.value,\r\n  },\r\n}));\r\nconst switchAlert = createAction(\"contact/ALERT\");\r\nconst switchEdit = createAction(\"contact/EDIT\");\r\n\r\nexport default {\r\n  editContactRequest,\r\n  editContactSuccess,\r\n  editContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n  // onAddContact,\r\n  onDeleteContact,\r\n  filterValue,\r\n  switchAlert,\r\n  switchEdit,\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"Alert_enter__3gtML\",\"enterActive\":\"Alert_enterActive__3jkeT\",\"exit\":\"Alert_exit__yuz4D\",\"exitActive\":\"Alert_exitActive__okEom\",\"alertWrapper\":\"Alert_alertWrapper__ez9gZ\",\"btn\":\"Alert_btn__1gffc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebookTitle\":\"App_phonebookTitle__3MljR\",\"appear\":\"App_appear__Qrn-L\",\"appearActive\":\"App_appearActive__2IH8s\",\"titleWrapper\":\"App_titleWrapper__1P62A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formInput\":\"Filter_formInput__lUGio\",\"formWrapper\":\"Filter_formWrapper__2njpW\",\"findContactTitle\":\"Filter_findContactTitle__2QkeV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebookTitle\":\"Contact_phonebookTitle__2yN-K\",\"contacts\":\"Contact_contacts__2IH6i\",\"enter\":\"Contact_enter__39J52\",\"enterActive\":\"Contact_enterActive__2Cp84\",\"exit\":\"Contact_exit__1jljT\",\"exitActive\":\"Contact_exitActive__3b2Ke\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactItem_contactItem__2vtNd\",\"enter\":\"ContactItem_enter__2QVga\",\"enterActive\":\"ContactItem_enterActive__zWSe_\",\"exit\":\"ContactItem_exit__DlMiU\",\"exitActive\":\"ContactItem_exitActive__1PZV3\"};","import axios from \"axios\";\r\nconst { default: actions } = require(\"./actions\");\r\n\r\nconst addContact = (contact) => (dispatch) => {\r\n  dispatch(actions.addContactRequest());\r\n\r\n  axios\r\n    .post(\"http://localhost:4040/contacts\", { ...contact })\r\n    .then((response) => {\r\n      dispatch(actions.addContactSuccess(response.data));\r\n    })\r\n    .catch((error) => dispatch(actions.addContactError(error)));\r\n};\r\n\r\nconst fetchContacts = () => (dispatch) => {\r\n  dispatch(actions.fetchContactRequest());\r\n\r\n  axios\r\n    .get(\"http://localhost:4040/contacts\")\r\n    .then(({ data }) => {\r\n      dispatch(actions.fetchContactSuccess(data));\r\n    })\r\n    .catch((error) => {\r\n      dispatch(actions.fetchContactError(error));\r\n    });\r\n};\r\n\r\nconst removeContact = (id) => (dispatch) => {\r\n  dispatch(actions.fetchContactRequest());\r\n  axios\r\n    .delete(`http://localhost:4040/contacts/${id}`)\r\n    .then(() => dispatch(actions.removeContactSuccess(id)))\r\n    .catch((error) => dispatch(actions.removeContactSuccess(error)));\r\n};\r\nconst editContact = ({ name, number, id }) => (dispatch) => {\r\n  dispatch(actions.editContactRequest());\r\n  axios\r\n    .patch(`http://localhost:4040/contacts/${id}`, { name, number })\r\n    .then(({ data }) => dispatch(actions.editContactSuccess(data)))\r\n    .catch((error) => dispatch(actions.editContactError(error)));\r\n};\r\nexport default { addContact, fetchContacts, removeContact, editContact };\r\n\r\n// import axios from \"axios\";\r\n// const { default: actions } = require(\"./actions\");\r\n\r\n// const addContact = (contact) => (dispatch) => {\r\n//   dispatch(actions.addContactRequest());\r\n\r\n//   axios\r\n//     .post(\"https://redux22-fb5c0.firebaseio.com/contacts.json\", { ...contact })\r\n//     .then((response) => {\r\n//       dispatch(actions.addContactSuccess(response.data));\r\n//     })\r\n//     .catch((error) => dispatch(actions.addContactError(error)));\r\n// };\r\n\r\n// const fetchContacts = () => (dispatch) => {\r\n//   dispatch(actions.fetchContactRequest());\r\n\r\n//   axios\r\n//     .get(\"https://redux22-fb5c0.firebaseio.com/contacts.json\")\r\n//     .then(({ data }) => {\r\n//       dispatch(actions.fetchContactSuccess(data));\r\n//     })\r\n//     .catch((error) => {\r\n//       dispatch(actions.fetchContactError(error));\r\n//     });\r\n// };\r\n\r\n// const removeContact = (id) => (dispatch) => {\r\n//   dispatch(actions.fetchContactRequest());\r\n//   axios\r\n//     .delete(`https://redux22-fb5c0.firebaseio.com/contacts.json/${id}`)\r\n//     .then(() => dispatch(actions.removeContactSuccess(id)))\r\n//     .catch((error) => dispatch(actions.removeContactSuccess(error)));\r\n// };\r\n// export default { addContact, fetchContacts, removeContact };\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nconst getContacts = (state) => state.contacts.items;\r\nconst getState = (state) => state.contacts;\r\nconst getAlert = (state) => state.alert;\r\nconst getLoading = (state) => state.loading;\r\nconst getEdit = (state) => state.edit;\r\nconst getFilter = (state) => state.contacts.filter;\r\n\r\nconst getFilteredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (items, filter) => {\r\n    return items.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  }\r\n);\r\n\r\nexport default {\r\n  getEdit,\r\n  getState,\r\n  getContacts,\r\n  getAlert,\r\n  getLoading,\r\n  getFilter,\r\n  getFilteredContacts,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./Form.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport contactActions from \"../redux/actions\";\r\nimport contactsOperations from \"../redux/contactsOperations\";\r\nimport contactsSelectors from \"../redux/contactsSelectors\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    id: \"\",\r\n    number: \"\",\r\n  };\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handeleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const contactItem = {\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n      // id: uuidv4(),\r\n    };\r\n\r\n    const wrongContact = this.props.items.map((contact) => contact.name);\r\n\r\n    wrongContact.find((item) => item === this.state.name)\r\n      ? this.props.switchAlert()\r\n      : this.props.onAddContact(contactItem);\r\n    this.setState({ name: \"\" });\r\n    this.setState({ number: \"\" });\r\n  };\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <>\r\n        <form onSubmit={this.handeleSubmit} className={styles.formWrapper}>\r\n          <h3 className={styles.inputTitle}>Name</h3>\r\n          <label>\r\n            <input\r\n              className={styles.formInput}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <h3 className={styles.inputTitle}>Phone</h3>\r\n          <label>\r\n            <input\r\n              className={styles.formInput}\r\n              type=\"text\"\r\n              name=\"number\"\r\n              value={number}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <button className={styles.btn} type=\"submit\">\r\n            Add Contact\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    items: contactsSelectors.getContacts(state),\r\n    alert: contactsSelectors.getAlert(alert),\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    switchAlert: () => dispatch(contactActions.switchAlert()),\r\n    onAddContact: (contact) => dispatch(contactsOperations.addContact(contact)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\r\n","import React, { useState } from \"react\";\r\nimport styles from \"./ContactItem.module.css\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\n// import actions from \"../redux/actions\";\r\nimport contactsOperations from \"../redux/contactsOperations\";\r\nimport contactsSelectors from \"../redux/contactsSelectors\";\r\n// import contactsReducer from \"../redux/contactsReducer\";\r\nimport actions from \"../redux/actions\";\r\n\r\nconst ContactItem = ({ contact, deleteContact, id, editContact }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const changeName = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n  const changeNumber = (e) => {\r\n    setNumber(e.target.value);\r\n  };\r\n\r\n  const showIsEdit = () => {\r\n    setIsEdit(true);\r\n  };\r\n  const hideIsEdit = () => {\r\n    setIsEdit(false);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(contactsOperations.editContact({ name, number, id }));\r\n    hideIsEdit();\r\n  };\r\n  return (\r\n    <li className={styles.contactItem}>\r\n      {!isEdit ? (\r\n        <div>\r\n          <p>\r\n            {contact.name}: {contact.number}\r\n          </p>\r\n          <button onClick={showIsEdit}>Edit</button>\r\n          <button type=\"button\" onClick={() => deleteContact(id)}>\r\n            Delete\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <form\r\n          onSubmit={handleSubmit}\r\n          // className={styles.formWrapper}\r\n        >\r\n          <h3\r\n          // className={styles.inputTitle}\r\n          >\r\n            Name\r\n          </h3>\r\n          <label>\r\n            <input\r\n              // className={styles.formInput}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={changeName}\r\n            />\r\n          </label>\r\n          <h3\r\n          // className={styles.inputTitle}\r\n          >\r\n            Phone\r\n          </h3>\r\n          <label>\r\n            <input\r\n              // className={styles.formInput}\r\n              type=\"text\"\r\n              name=\"number\"\r\n              value={number}\r\n              onChange={changeNumber}\r\n            />\r\n          </label>\r\n          <button\r\n            // className={styles.btn}\r\n\r\n            type=\"submit\"\r\n          >\r\n            Save\r\n          </button>\r\n          <button type=\"button\" onClick={hideIsEdit}>\r\n            Cancel\r\n          </button>\r\n        </form>\r\n      )}\r\n    </li>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  deleteContact: () => dispatch(contactsOperations.removeContact(ownProps.id)),\r\n  editContact: () => dispatch(actions.editContact()),\r\n  // switchAlert: () => dispatch(contactActions.switchAlert()),\r\n});\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  isEdit: contactsSelectors.getEdit(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactItem);\r\n","import React, { Component } from \"react\";\r\nimport ContactItem from \"./ContactItem\";\r\nimport styles from \"./Contact.module.css\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsSelectors from \"../redux/contactsSelectors\";\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <TransitionGroup className={styles.contacts}>\r\n          {this.props.items.map((contact) => (\r\n            <CSSTransition\r\n              key={contact.id}\r\n              timeout={1000}\r\n              classNames={styles}\r\n              unmountOnExit\r\n            >\r\n              <ContactItem key={contact.id} id={contact.id} contact={contact} />\r\n            </CSSTransition>\r\n          ))}\r\n        </TransitionGroup>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    items: contactsSelectors.getFilteredContacts(state),\r\n    // contacts: state.contacts.items.filter((contact) =>\r\n    //   contact.name.toLowerCase().includes(state.contacts.filter.toLowerCase())\r\n    // ),\r\n    filter: contactsSelectors.getFilter(state),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Contacts);\r\n","import React from \"react\";\r\nimport styles from \"./Filter.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport actions from \"../redux/actions\";\r\nimport contactsSelectors from \"../redux/contactsSelectors\";\r\n\r\nconst Filter = ({ getFilterValue, filter }) => {\r\n  return (\r\n    <>\r\n      <label className={styles.formWrapper}>\r\n        <p className={styles.findContactTitle}>Find Contact by name</p>\r\n        <input\r\n          className={styles.formInput}\r\n          value={filter}\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          onChange={(e) => getFilterValue(e)}\r\n        />\r\n      </label>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: contactsSelectors.getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getFilterValue: actions.filterValue,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport styles from \"./Alert.module.css\";\r\n\r\nconst Alert = ({ alertSwitch }) => {\r\n  return (\r\n    <div className={styles.alertWrapper}>\r\n      <p>Contact already exist !</p>\r\n      <button onClick={alertSwitch} className={styles.btn}>\r\n        Ok\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React, { Component } from \"react\";\r\nimport Form from \"./contactsForm/Form\";\r\nimport Contacts from \"./contacts/Contacts\";\r\nimport Filter from \"./filter/Filter\";\r\nimport styles from \"./App.module.css\";\r\nimport stylesAlert from \"./alert/Alert.module.css\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport Alert from \"./alert/Alert\";\r\nimport { connect } from \"react-redux\";\r\nimport contactActions from \"./redux/actions\";\r\nimport contactsOperations from \"./redux/contactsOperations\";\r\nimport contactsSelectors from \"./redux/contactsSelectors\";\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n\r\n  alertSwitch = () => {\r\n    this.props.switchAlert();\r\n  };\r\n\r\n  render() {\r\n    const { alert, isLoading } = this.props.contacts;\r\n\r\n    return (\r\n      <>\r\n        <TransitionGroup className={styles.titleWrapper}>\r\n          <CSSTransition\r\n            classNames={styles}\r\n            in={true}\r\n            appear={true}\r\n            timeout={500}\r\n            unmountOnExit\r\n          >\r\n            <h2 className={styles.phonebookTitle}> Phonebook</h2>\r\n          </CSSTransition>\r\n          {alert && (\r\n            <CSSTransition\r\n              classNames={stylesAlert}\r\n              in={true}\r\n              appear={true}\r\n              timeout={500}\r\n              unmountOnExit\r\n            >\r\n              <Alert alertSwitch={this.alertSwitch} />\r\n            </CSSTransition>\r\n          )}\r\n        </TransitionGroup>\r\n        <Form addContact={this.props.addContact} />\r\n        <h2 className={styles.phonebookTitle}>Contacts</h2>\r\n        <Filter />\r\n        {isLoading && <h2>Loading contacts ...</h2>}\r\n        <Contacts />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contacts: contactsSelectors.getState(state),\r\n    alert: contactsSelectors.getAlert(state),\r\n    isLoading: contactsSelectors.getLoading(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addContact: (contact) => dispatch(contactActions.onAddContact(contact)),\r\n    switchAlert: () => dispatch(contactActions.switchAlert()),\r\n    fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport actions from \"./actions\";\r\n\r\nconst addTask = (state, action) => {\r\n  return [...state, action.payload];\r\n};\r\nconst removeTast = (state, action) => {\r\n  return state.filter((contact) => contact.id !== action.payload);\r\n};\r\nconst filterValue = (state, action) => {\r\n  return (state = action.payload.filter);\r\n};\r\nconst alertSwitch = (state, action) => {\r\n  return (state = !state);\r\n};\r\nconst editContact = (state, { type, payload }) => {\r\n  return state.map((item) =>\r\n    item.id === payload.id ? { ...item, ...payload } : item\r\n  );\r\n};\r\n// const editSwitch = (state, action) => {\r\n//   return (state = !state);\r\n// };\r\nconst items = createReducer([], {\r\n  [actions.fetchContactSuccess]: (state, action) => action.payload,\r\n  [actions.removeContactSuccess]: removeTast,\r\n  [actions.addContactSuccess]: addTask,\r\n  [actions.editContactSuccess]: editContact,\r\n  [actions.onDeleteContact]: removeTast,\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [actions.filterValue]: filterValue,\r\n});\r\n\r\nconst alert = createReducer(false, {\r\n  [actions.switchAlert]: alertSwitch,\r\n});\r\n// const edit = createReducer(false, {\r\n//   [actions.switchEdit]: editSwitch,\r\n// });\r\n\r\nconst loading = createReducer(false, {\r\n  [actions.fetchContactRequest]: () => true,\r\n  [actions.addContactRequest]: () => true,\r\n  [actions.addContactSuccess]: () => false,\r\n  [actions.fetchContactSuccess]: () => false,\r\n  [actions.addContactError]: () => false,\r\n  [actions.fetchContactError]: () => false,\r\n});\r\n\r\nexport default combineReducers({ items, filter, alert, loading });\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport contactsReducer from \"./contactsReducer\";\r\n// import logger from \"redux-logger\";\r\n\r\nconst defaultMiddleware = getDefaultMiddleware();\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware: [...defaultMiddleware],\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\n// console.log(store.getState());\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  // </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}